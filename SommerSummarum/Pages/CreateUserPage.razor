@using Core.Models;
@inject NavigationManager navigationManager
@inject HttpClient Http;
@using SommerSummarum.Services

@page "/CreateUserPage"
<h3>Create User</h3>

<EditForm EditContext="@aEditContext" class="row p-3" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="col-md-12 mb-3">
        <label for="Username">Username</label>
        <InputText id="Username" @bind-Value="userItem.Username" class="form-control" placeholder="Angiv brugernavn til konto"/>
    </div>
    <div class="col-md-6 mb-3">
        <label for="Password">Password</label>
        <InputText id="Password" @bind-Value="userItem.Password" class="form-control" placeholder="Angiv kodeord til konto"/>
    </div>
    <div class="col-md-6 mb-3">
        <label for="Email">Email</label>
        <InputText id="Email" @bind-Value="userItem.Email" class="form-control" placeholder="Angiv email til konto" />
    </div>

    <div class="col-12 mb-3">
        <button type="submit" class="btn btn-primary">Create Account</button>
    </div>
</EditForm>

@code {
    private EditContext? aEditContext;

    private string serverUrl = "https://localhost:7016";

    private User userItem = new User();

    [Inject]
    private IUserService uService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        aEditContext = new EditContext(userItem);
    }

    public async Task HandleValidSubmit()
    {
        await NavigateToLoginPage();
        await AddUser();
    }

    private async Task AddUser()
    {
        await uService.AddUser(userItem);
    }


    private async Task NavigateToLoginPage()
    {
        navigationManager.NavigateTo("LoginPage");
    }
}