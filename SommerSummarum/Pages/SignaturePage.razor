@inject Blazored.LocalStorage.ILocalStorageService localStore
@using Core.Models
@using System.Text.Json
@inject HttpClient Http
@using System.Net
@using Blazorise.SignaturePad
@using MongoDB.Driver.Core.Operations
@using SommerSummarum.Services

@page "/SignaturePage"
<h3>SignaturePage</h3>

<div class="col-md-6 mb-3">

    <label for="kraevnummeru18">Søg efter Krævnummer på U18 Frivillig</label>
    <input id="kraevnummeru18" @bind="kraevnummeru18" class="form-control" placeholder="Indtast krævnummer"/> 

    <button class="btn btn-primary" @onclick="FilterBoth">Søg</button>
</div>



<table class="table table-striped">
    <thead>
    <tr>
        <th>Navn på værge</th>
        <th>Krævnummer</th>
        <th>Email på værge</th>
        <th>Telefonnummer på værge</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in U18VolunteerList ?? new U18Volunteer[0])
    {
        <tr>
            <td>@item.ParentName</td>
            <td>@item.KraevnummerU18</td>
            <td>@item.ParentEmail</td>
            <td>@item.ParentPhoneNumber</td>
            @if (item.GuardianSignature is not null)
            {
                <td>
                    <button class="btn btn-primary" @onclick="() => OpenSignatureDialog(item.GuardianSignature, item.ParentEmail)">Se Signatur</button>
                </td>
            }
        </tr>
    }
    @foreach (var item in RegisteredChildList ?? new RegisteredChild[0])
    {
        <tr>
           <td>@item.ParentName</td>
            <td>@item.Krævnr</td>
            <td>@item.ParentEmail</td>
            @if (item.GuardianSignature is not null)
                        {
                            <td>
                                <button class="btn btn-primary" @onclick="() => OpenSignatureDialog(item.GuardianSignature, item.ParentEmail)">Se Signatur</button>
                            </td>
                        }
        </tr>
    }


    </tbody>


</table>

<ModalDialog @ref="@SignatureDialog" Title="Signatur af værge">
    <div class="row p-3">
        <div class="col-md-12 mb-3">
            <strong>Underskrift:</strong>
            <img src="data:image/jpg;base64, @Convert.ToBase64String(currentSignature)" width="200"/>
        </div>
        
        <div class="col-12 mb-3">
            <a class="btn btn-primary" href="data:image/jpg;base64, @Convert.ToBase64String(currentSignature)" download="@($"{parentEmailForModal} signatur.jpeg")">Download signatur</a>
        </div>


    </div>
</ModalDialog>

@code {
    private User? user;
    
    private string parentEmailForModal;
    
    private ModalDialog? SignatureDialog;

    private string kraevnummeru18;

    private byte[] currentSignature = new byte[0];

    private string serverUrl = "https://localhost:7016";

    private U18Volunteer[]? U18VolunteerList = new U18Volunteer[0];

    private RegisteredChild[]? RegisteredChildList = new RegisteredChild[0];
    
    [Inject]
    private IRegisterChildService rService { get; set; }
    
    [Inject]
    private IU18VolunteerService uService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var userInfoJson = await localStore.GetItemAsStringAsync("userinfo");
        if (!string.IsNullOrEmpty(userInfoJson))
        {
            user = JsonSerializer.Deserialize<User>(userInfoJson);
        }
    }

    private async Task FilterByKraevnummerU18()
    {
        await uService.FilterByU18Kraev(kraevnummeru18);

        // Trigger a UI refresh to show the updated volunteer list
        StateHasChanged();
    }

    private async Task FilterBoth()
    {
        await FilterByKraevnummerU18();
        await FilterByKrævnr();
        
    }
    
    private async Task FilterByKrævnr()
    {
        await rService.FilterByKraev(kraevnummeru18);

        // Trigger a UI refresh to show the updated volunteer list
        StateHasChanged();
    }
    
    

    private void OpenSignatureDialog(byte[] sigsag, string parentEmail)
    {
        currentSignature = sigsag;
        parentEmailForModal = parentEmail; 
        SignatureDialog.Open();
    }

  
   

}