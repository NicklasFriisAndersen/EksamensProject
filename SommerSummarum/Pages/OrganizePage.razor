@page "/organize"
@using Blazorise
@using Blazorise.SignaturePad
@inject Blazored.LocalStorage.ILocalStorageService localStore;
@using SommerSummarum.Services

@inject HttpClient Http
@using Core.Models
@using System.Text.Json

@if (user?.Role == Roles.Admin)
{
    <h3>Organiser Ledige Pladser</h3>
    
    

    <!--tabel til alle perioder-->

    <div class="col-md-12 mb-3">
        @foreach (var weekGroup in periodList.GroupBy(p => p.Week))
        {
            int onsdagSøndagCount = 0;
            int onsdagFredagCount = 0;
            int lørdagSøndagCount = 0;

            // Tæl børn for hver periode-type inden for denne uge
            foreach (var item in childList ?? new RegisteredChild[0])
            {
                if (item.AssignedPeriod.Week == weekGroup.Key)
                {
                    var days = item.AssignedPeriod.Days;
                    if (days == "Onsdag-Søndag")
                    {
                        onsdagFredagCount++;
                        lørdagSøndagCount++;
                    }
                    else if (days == "Onsdag-Fredag")
                    {
                        onsdagFredagCount++;
                    }
                    else if (days == "Lørdag-Søndag")
                    {
                        lørdagSøndagCount++;
                    }
                }
            }


            <h4>@weekGroup.Key</h4>
            <a class="btn btn-secondary" href="@($"{serverUrl}/api/registeredchildren/csv?assignedWeek={weekGroup.Key}")" >Hent som CSV</a> 
            <button @onclick="() => Copy(weekGroup.Key)" class="btn btn-secondary">Kopier Mails</button>
            @if (onsdagFredagCount > 20)
            {
                <p class="text-danger">
                    Onsdag-Fredag: @onsdagFredagCount<br />
                </p>
            }
            else
            {
                <p>
                    Onsdag-Fredag: @onsdagFredagCount<br />
                </p>
            }

            @if (lørdagSøndagCount > 20)
            {
                <p class="text-danger">
                    Lørdag-Søndag: @lørdagSøndagCount<br />
                </p>
            }
            else
            {
                <p>
                    Lørdag-Søndag: @lørdagSøndagCount<br />
                </p>
            }

            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Navn</th>
                        <th>Alder</th>
                        <th>Kommentar</th>
                        <th>1. Prioritet</th>
                        <th>2. Prioritet</th>
                        <th>Tildelt Periode</th>
                        <th>Fjern fra Periode</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in childList ?? new RegisteredChild[0])
                    {
                        if (item.AssignedPeriod.Week == weekGroup.Key)
                        {
                            <tr>
                                <td>@item.Name</td>
                                <td>@item.Age</td>
                                <td>@item.Comment</td>
                                <td>@($"{item.FirstPriority?.Week}, {item.FirstPriority?.Day}")</td>
                                <td>@($"{item.SecondPriority?.Week}, {item.SecondPriority?.Day}")</td>
                                <td> <b>@($"{item.AssignedPeriod?.Week}, {item.AssignedPeriod?.Days}")</b> </td>
                                <td><button class="btn btn-danger" @onclick="() => UpdateChild(item, remove)">Fjern</button></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        }
    </div>

<h3>Tildel periode</h3>

    <div class="col-md-12 mb-3">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Navn</th>
                    <th>Alder</th>
                    <th>Kommentar</th>
                    <th>1. Prioritet</th>
                    <th>2. Prioritet</th>
                    <th>Tildel 1. Prioritet</th>
                    <th>Tildel 2. Prioritet</th>
                    <th>Slet</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in childList ?? new RegisteredChild[0])
                {

                    if (item.AssignedPeriod.Week == "Ikke Tilføjet")
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Age</td>
                            <td>@item.Comment</td>
                            <td>@($"{item.FirstPriority.Week}, {item.FirstPriority.Day}")</td>
                            @if (item.SecondPriority.Week == "Jeg kan kun i 1. prioritet")
                            {
                                <td>Jeg kan kun i 1. prioritet</td>
                            }
                            else
                            {
                                <td>@($"{item.SecondPriority.Week}, {item.SecondPriority.Day}")</td>
                            }
                            <td><button class="btn btn-primary" @onclick="() => UpdateChild(item, prioritet1)">Tildel 1. Prioritet</button></td>
                            <td><button class="btn btn-warning" @onclick="() => UpdateChild(item, prioritet2)">Tildel 2. Prioritet</button></td>
                            <td><button class="btn btn-danger" @onclick="() => UpdateChild(item, delete)">Slet</button></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <h3>Venteliste</h3>
    <button @onclick="CopyRemovedEmails" class="btn btn-secondary">Kopier Mails for Fjernet</button>

    <div class="col-md-12 mb-3">
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Navn</th>
                <th>Alder</th>
                <th>Kommentar</th>
                <th>1. Prioritet</th>
                <th>2. Prioritet</th>
                <th>Hent Tilbage</th>
            </tr>
            </thead>

            <tbody>
                @foreach (var item in childList ?? new RegisteredChild[0])
                {

                    if (item.AssignedPeriod.Week == "Fjernet")
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Age</td>
                            <td>@item.Comment</td>
                            <td>@($"{item.FirstPriority.Week}, {item.FirstPriority.Day}")</td>
                            @if (item.SecondPriority.Week == "Jeg kan kun i 1. prioritet")
                            {
                                <td>Jeg kan kun i 1. prioritet</td>
                            }
                            else
                            {
                                <td>@($"{item.SecondPriority.Week}, {item.SecondPriority.Day}")</td>
                            }
                            <td><button class="btn btn-success" @onclick="() => UpdateChild(item, remove)">Hent Tilbage</button></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p>Du har ikke rettigheder til at se denne side</p>
}


@code {
    [Inject]
    private IPeriodService pService { get; set; }

    [Inject]
    private IRegisterChildService rService { get; set; }
    
    [Inject]
    private IClipboardService cService { get; set; }

    private string serverUrl = "https://localhost:7016";

    private List<Period>? periodList = new();

    private RegisteredChild[]? childList = new RegisteredChild[0];


    private string prioritet1 = "prioritet1";
    private string prioritet2 = "prioritet2";
    private string remove = "remove";
    private string delete = "delete";


    private User? user;


    protected override async Task OnInitializedAsync()
    {
        childList = await rService.GetAllChildrenPrioSort();

        periodList = await pService.GetAllPeriod();

        var userInfoJson = await localStore.GetItemAsStringAsync("userinfo");
        if (!string.IsNullOrEmpty(userInfoJson))
        {
            user = JsonSerializer.Deserialize<User>(userInfoJson);
        }
    }

    public async Task UpdateChild(RegisteredChild registeredChild, string prio)
    {
        if (prio == "prioritet1")
        {
            registeredChild.AssignedPeriod.Week = registeredChild.FirstPriority.Week;
            registeredChild.AssignedPeriod.Days = registeredChild.FirstPriority.Day;
        }
        else if (prio == "prioritet2")
        {
            registeredChild.AssignedPeriod.Week = registeredChild.SecondPriority.Week;
            registeredChild.AssignedPeriod.Days = registeredChild.SecondPriority.Day;
        }
        else if (prio == "remove")
        {
            registeredChild.AssignedPeriod.Week = "Ikke Tilføjet";
            registeredChild.AssignedPeriod.Days = "Ikke Tilføjet";
        }
        else if (prio == "delete")
        {
            registeredChild.AssignedPeriod.Week = "Fjernet";
            registeredChild.AssignedPeriod.Days = "Fjernet";
        }

        await rService.EditChildItem(registeredChild);
    }

    async Task Copy(string weekGroupKey)
    {
        string mails = "";
        foreach (var child in childList.Where(c => c.AssignedPeriod.Week == weekGroupKey))
        {
            mails += child.ParentEmail + ", ";
        }

        await cService.CopyToClipboard(mails);
    }
    
    async Task CopyRemovedEmails()
    {
        string mails = "";
        foreach (var child in childList.Where(c => c.AssignedPeriod.Week == "Fjernet"))
        {
            mails += child.ParentEmail + ", ";
        }

        await cService.CopyToClipboard(mails);
    }

}
