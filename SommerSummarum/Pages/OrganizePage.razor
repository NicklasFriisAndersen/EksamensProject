@page "/organize"
@using Blazorise
@using Blazorise.SignaturePad
@using SommerSummarum.Services

@inject HttpClient Http
@using Core.Models

<h3>Organiser Ledige Pladser</h3>

<div class="col-md-12 mb-3">

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Navn</th>
                <th>Alder</th>
                <th>Kommentar</th>
                <th>1. Prioritet</th>
                <th>2. Prioritet</th>
                <th>Valgt Prioritet</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in childList ?? new RegisteredChild[0])
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Age</td>
                    <td>@item.Comment</td>
                    <td>@($"{item.FirstPriority.Week}, {item.FirstPriority.Day}")</td>
                    <td>@($"{item.SecondPriority.Week}, {item.SecondPriority.Day}")</td>
                    <td>
                        <InputSelect @bind-Value="@item.AssignedPeriod" class="form-control">
                            <option value="@($"{item.FirstPriority.Week}, {item.FirstPriority.Day}")">@($"{item.FirstPriority.Week}, {item.FirstPriority.Day}")</option>
                            <option value="@($"{item.SecondPriority.Week}, {item.SecondPriority.Day}")">@($"{item.SecondPriority.Week}, {item.SecondPriority.Day}")</option>
                        </InputSelect>
                    </td>

                    <td><button class="btn btn-primary" @onclick="() => UpdateChild(item)">Purchase</button></td>

                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    [Inject]
    private IPeriodService pService { get; set; }

    [Inject]
    private IRegisterChildService rService { get; set; }

    private string serverUrl = "https://localhost:7016";

    private string test = "";

    private string selectedPeriod = "";

    private List<Period>? periodList = new();


    private RegisteredChild[]? childList = new RegisteredChild[0];


    protected override async Task OnInitializedAsync()
    {
        childList = await Http.GetFromJsonAsync<RegisteredChild[]>($"{serverUrl}/api/registeredchildren/getall");

        periodList = await pService.GetAllPeriod();

        foreach (var item in periodList)
        {
            Console.WriteLine(item.Week);
        }
    }

    public async void UpdateChild(RegisteredChild registeredChild)
    {
        await rService.EditChildItem(registeredChild);
    }

}
