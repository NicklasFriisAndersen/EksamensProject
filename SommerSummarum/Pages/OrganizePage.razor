@page "/organize"
@using Blazorise
@using Blazorise.SignaturePad
@using SommerSummarum.Services

@inject HttpClient Http
@using Core.Models

<h3>Organiser Ledige Pladser</h3>

<!--tabel til alle perioder-->
<div class="col-md-12 mb-3">
    @foreach (var weekGroup in periodList.GroupBy(p => p.Week))
    {
        <h4>@weekGroup.Key</h4>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Navn</th>
                    <th>Alder</th>
                    <th>Kommentar</th>
                    <th>1. Prioritet</th>
                    <th>2. Prioritet</th>
                    <th>Valgt Prioritet</th>
                    <th>Tilføj</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in childList ?? new RegisteredChild[0])
                {
                    if (item.AssignedPeriod.Contains(weekGroup.Key.ToString()))
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Age</td>
                            <td>@item.Comment</td>
                            <td>@($"{item.FirstPriority?.Week}, {item.FirstPriority?.Day}")</td>
                            <td>@($"{item.SecondPriority?.Week}, {item.SecondPriority?.Day}")</td>
                            <td>
                                <InputSelect @bind-Value="@item.AssignedPeriod" class="form-control">
                                    <option value="Ikke Tilføjet">Ikke Tilføjet</option>
                                    <option value="@($"{item.FirstPriority?.Week}, {item.FirstPriority?.Day}")">@($"{item.FirstPriority?.Week}, {item.FirstPriority?.Day}")</option>
                                    <option value="@($"{item.SecondPriority?.Week}, {item.SecondPriority?.Day}")">@($"{item.SecondPriority?.Week}, {item.SecondPriority?.Day}")</option>
                                </InputSelect>
                            </td>
                            <td><button class="btn btn-primary" @onclick="() => UpdateChild(item)">Tilføj</button></td>
                        </tr>
                    }

                }
            </tbody>
        </table>
    }
</div>


<h3>Tildel perioder</h3>

<!--tabel til alle ledige børn-->
<div class="col-md-12 mb-3">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Navn</th>
                <th>Alder</th>
                <th>Kommentar</th>
                <th>1. Prioritet</th>
                <th>2. Prioritet</th>
                <th>Valgt Prioritet</th>
                <th>Tilføj</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in childList ?? new RegisteredChild[0])
                {
                    //if (item.AssignedPeriod == "Ikke Tilføjet")
                    //{
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Age</td>
                        <td>@item.Comment</td>
                        <td>@($"{item.FirstPriority.Week}, {item.FirstPriority.Day}")</td>
                        @if (item.SecondPriority.Week == "Jeg kan kun i 1. prioritet")
                        {
                            <td>Jeg kan kun i 1. prioritet</td>
                        }
                        else
                        {
                            <td>@($"{item.SecondPriority.Week}, {item.SecondPriority.Day}")</td>

                        }
                        <td>
                            <InputSelect @bind-Value="@item.AssignedPeriod" class="form-control">
                                <option value="Ikke Tilføjet">Ikke Tilføjet</option>
                                <option value="@($"{item.FirstPriority.Week}, {item.FirstPriority.Day}")">@($"{item.FirstPriority.Week}, {item.FirstPriority.Day}")</option>
                                @if (item.SecondPriority.Week == "Jeg kan kun i 1. prioritet")
                                {
                                    <option>Jeg kan kun i 1. prioritet</option>
                                }
                                else
                                {
                                    <option value="@($"{item.SecondPriority.Week}, {item.SecondPriority.Day}")">@($"{item.SecondPriority.Week}, {item.SecondPriority.Day}")</option>

                                }

                            </InputSelect>
                        </td>

                        <td><button class="btn btn-primary" @onclick="() => UpdateChild(item)">Tilføj</button></td>

                    </tr>
                //}

            }
        </tbody>
    </table>
</div>

@code {
    [Inject]
    private IPeriodService pService { get; set; }

    [Inject]
    private IRegisterChildService rService { get; set; }

    private string serverUrl = "https://localhost:7016";

    //private string test = "";

    //private string selectedPeriod = "";

    private List<Period>? periodList = new();


    private RegisteredChild[]? childList = new RegisteredChild[0];


    protected override async Task OnInitializedAsync()
    {
        childList = await Http.GetFromJsonAsync<RegisteredChild[]>($"{serverUrl}/api/registeredchildren/getall");

        periodList = await pService.GetAllPeriod();

        foreach (var item in periodList)
        {
            Console.WriteLine(item.Week);
        }
    }

    public async void UpdateChild(RegisteredChild registeredChild)
    {
        await rService.EditChildItem(registeredChild);
    }

}
