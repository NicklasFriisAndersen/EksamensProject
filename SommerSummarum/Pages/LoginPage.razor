@page "/LoginPage"
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStore
@inject HttpClient HttpClient
@using Core.Models
@using System.Net.Http
@using System.Net
@using System.Text.Json
@using MongoDB.Bson
@using MongoDB.Bson.Serialization
@using MongoDB.Driver.Core.Operations
@using SommerSummarum.Services
@inject ILoginService loginService


<div class="row">
     <!-- Login Section -->
     <div class="col-md-6">
         <div class="login-section">
             <h3>Login</h3>
             <div class="form-group">
                 <label for="username">Brugernavn</label>
                 <input id="username" @bind="username" class="form-control" />
             </div>
             <div class="form-group">
                 <label for="password">Password</label>
                 <input type="password" @bind="password" id="password" class="form-control" />
             </div>
             <div class="form-group" style="margin-top: 20px;">
                 <button type="button" class="btn btn-primary" @onclick="HandleLogin">Login</button>
             </div>
         </div>
     </div>
 
     <!-- Registration Section -->
     <div class="col-md-6">
         <div class="registration-section">
             <h3>Don't have an account?</h3>
             <div class="form-group">
                 <button type="button" class="btn btn-primary" @onclick="GotoCreateUser">Create User</button>
             </div>
         </div>
     </div>
 </div>

@code {
    private string username;
    private string password;
    
    [Inject]
    private ILoginService lService { get; set; }
    

    private async Task HandleLogin()
    {
        var user = await LoginService.LoginAsync(username, password);
        if (user == null)
        {
            Console.WriteLine("Login failed. Please check your credentials.");
        }
        else
        {
            Console.WriteLine("Login successful!");
            // Here, add any logic needed after successful login
            // For example, navigating to another page or updating UI components
        }
    }
    private async Task GotoCreateUser()
    {
        NavigationManager.NavigateTo("/CreateUserPage");
    }
}